name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - master

  workflow_dispatch:  # Para disparo manual

permissions:
  id-token: write
  contents: read

jobs:
  provision-infrastructure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Install Ansible and Azure dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible
          ansible-galaxy collection install azure.azcollection

      - name: Run Ansible Playbook
        uses: actionshub/ansible@v2.8.0
        with:
          playbook: ansible/playbook.yml
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: provision-infrastructure
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install
        working-directory: node-app #comentario

      - name: Lint code
        run: npm run lint
        working-directory: node-app

#    - name: Test code
#      run: npm test
#      working-directory: node-app

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ github.repository }}/node-app:latest .
          docker tag ${{ github.repository }}:latest ${{ secrets.ACR_LOGIN_SERVER }}/${{ github.repository }}:latest

        working-directory: node-app
      
      - name: Push Docker image to Azure Container Registry
        run: |
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/${{ github.repository }}node-app:latest


  deploy-to-aks:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }} --overwrite-existing

      - name: Deploy to AKS
        run: |
          kubectl apply -f k8s-deployment.yml
