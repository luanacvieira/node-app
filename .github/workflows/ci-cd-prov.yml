name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - master

  workflow_dispatch:  # Para disparo manual

permissions:
  id-token: write
  contents: read

jobs:
  provision-infrastructure:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: "ea0f02da-f58e-490d-89d1-7fb4dbef53a7"
          tenant-id: "bd7fc3cc-a630-4a2b-a6b9-d3878045c85d"
          subscription-id: "8c35b025-ce1a-48a1-8491-b82ae7d9249e"
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Verify PATH
        run: |
          pwd
          ls -la
      
      
      - name: Install Ansible and Azure dependencies
        run: |
          pip install --upgrade pip
          sudo apt-get update
          sudo apt-get install build-essential libssl-dev libffi-dev python3-dev
          pip install ansible[azure]
      #    pip install azure
      
      - name: Verify PATH 222
        run: |
          pwd
          ls -la

      - name: Run Ansible playbook
        env:
          AZURE_CLIENT_ID: "ea0f02da-f58e-490d-89d1-7fb4dbef53a7"
          AZURE_CLIENT_SECRET: "QT98Q~XSoVgBhhRq7-X5_eZeF2N.IaxtmXwn~anY"
          AZURE_SUBSCRIPTION_ID: "8c35b025-ce1a-48a1-8491-b82ae7d9249e"
          AZURE_TENANT_ID: "bd7fc3cc-a630-4a2b-a6b9-d3878045c85d"
          ANSIBLE_PYTHON_INTERPRETER: /opt/hostedtoolcache/Python/3.12.4/x64/lib
        run: ansible-playbook ansible/playbook.yml
        

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: provision-infrastructure
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install
        working-directory: node-app #comentario

      - name: Lint code
        run: npm run lint
        working-directory: node-app

#    - name: Test code
#      run: npm test
#      working-directory: node-app

      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ github.repository }}/node-app:latest .
          docker tag ${{ github.repository }}:latest ${{ secrets.ACR_LOGIN_SERVER }}/${{ github.repository }}:latest

        working-directory: node-app
      
      - name: Push Docker image to Azure Container Registry
        run: |
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/${{ github.repository }}node-app:latest


  deploy-to-aks:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }} --overwrite-existing

      - name: Deploy to AKS
        run: |
          kubectl apply -f k8s-deployment.yml
